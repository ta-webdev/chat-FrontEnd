{"version":3,"sources":["socket/allSockets.js","Api/LocalStorage.js","Api/Api.js","Component/WaitingPage.js","Component/Home.js","Component/EventPage.js","Component/ThankYou.js","Component/Login.js","Component/Configrator.js","Component/PollResult.js","Component/renderMessageImp.js","Component/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["endPoint","openSocket","getKey","key","localStorage","getItem","setKey","data","setItem","getLocalStorage","JSON","parse","Baseurl","getToken","postAPI","path","token","axios","method","url","headers","putAPI","getAPI","getPublicAPI","WaitingPage","props","state","id","Time","event","hours","minutes","days","this","myInterval","setInterval","date","Current","Date","r","getTime","Math","floor","isNaN","getHMS","setState","className","href","src","alt","React","Component","AllPage","EventPage","Url","isPublish","Message","Question","Answer","a","b","c","d","hidePopup","io","on","resp","console","log","question","surveyOption","isPublished","$","hide","show","toggleClass","removeClass","e","preventDefault","arr","userId","uid","query","then","status","User","qId","optId","target","value","name","type","width","height","frameborder","allow","style","float","onClick","viewBox","fill","xmlns","fill-rule","clip-rule","checked","onChange","onRadioChange","htmlFor","savePoll","onSubmit","sendMessage","placeholder","openPoll","openQuestion","ThankYou","Home","startTime","URLSearchParams","location","search","get","user","stringify","over","start","Login","UserName","Password","history","push","pswd","alert","message","rel","integrity","crossorigin","onLogin","aria-describedby","Configrator","handleChange","StartDate","_d","list","time","Poll","Ans1","Ans2","Ans3","Ans4","AllMessage","unshift","length","map","l","k","selectQuestion","val","changetoggle","AllPoll","forEach","pollId","onToggle","makeLive","showResult","removePoll","resetQuestion","window","confirm","onStartEvent","onEndEvent","renderPoll","saveQuestion","renderQuestions","PollResult","Questions","questionId","Object","keys","A","B","C","D","renderCanvas","ctx","document","getElementById","getContext","Chart","plugins","unregister","ChartDataLabels","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","datalabels","color","title","font","weight","scales","yAxes","gridLines","xAxes","background","renderMessageImp","f_name","Navigation","exact","component","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","catch","error"],"mappings":"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","file":"static/js/main.22a0c59f.chunk.js","sourcesContent":["import openSocket from 'socket.io-client';\nconst endPoint = 'https://iciciback.livestudio.cloud/';\nconst  socket = openSocket(endPoint);\n\nfunction subscribeToMessage(cb) {\n  socket.on('news', (message) => cb(message));\n}\n\nfunction sendMessage(message) {\n  let r = socket.emit('message', message);\n  return r;\n}\n\nexport { subscribeToMessage, sendMessage, socket, endPoint };","export const getKey = (key) => {\n  let data = localStorage.getItem(key);\n  return data;\n}\n\nexport const setKey = (key, data) => {\n  data = localStorage.setItem(key, data);\n  return data;\n}\n\nexport const getLocalStorage = (key) => {\n  let data = getKey(key);\n  if (data === null || !data || data === '') return '';\n  return JSON.parse(data);\n}\n\nexport const setLocalStorage = (key, data) => {\n  return setKey(key, JSON.stringify(data));\n}\n","import axios from 'axios';\nimport { getKey } from './LocalStorage';\n\nconst Baseurl = 'https://iciciback.livestudio.cloud/';\nconst getToken = (key) => {\n  return getKey(key);\n}\n\nexport const postAPI = (path, data) => {\n  let token = getToken('token');\n  return axios({\n    method: 'post',\n    url: Baseurl + path,\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + token },\n    data: data\n  })\n}\n\nexport const putAPI = (path, data) => {\n  let token = getToken('token');\n  return axios({\n    method: 'put',\n    url: Baseurl + path,\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + token },\n    data: data\n  })\n}\n\nexport const getAPI = (path) => {\n  let token = getToken('token');\n  return axios({\n    method: 'get',\n    url: Baseurl + path,\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + token },\n  })\n}\n\nexport const getPublicAPI = (path) => {\n  return axios({\n    method: 'get',\n    url: Baseurl + path,\n    headers: { 'content-type': 'application/json' },\n  })\n}","import React from 'react';\n\nconst getHMS = (date) => {\n  let Current = new Date();\n  let cDate = new Date(date);\n\n  let r = cDate.getTime() - Current.getTime();\n  r = r / 1000;\n\n  var days = Math.floor(r / (60 * 60 * 24));\n  r -= days * (60 * 60 * 24);\n\n  // calculate (and subtract) whole hours\n  var hours = Math.floor(r / (60 * 60));\n  r -= hours * (60 * 60);\n\n  // calculate (and subtract) whole minutes\n  var minutes = Math.floor(r / 60) % 60;\n  r -= minutes * 60;\n\n  return {\n    days: (isNaN(days)) ? 0 : days,\n    hours: (isNaN(hours)) ? 0 : hours,\n    minutes: (isNaN(minutes)) ? 0 : minutes,\n  }\n}\n\nclass WaitingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      Time: this.props.Time,\n      event: '',\n      hours: 0,\n      minutes: 0,\n      days: 0,\n    }\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      let { hours, minutes, days } = getHMS(this.props.Time);\n      this.setState({ days, hours, minutes });\n    }, 1000)\n  }\n\n\n  render() {\n    return (\n      <div className=\"welcomeHeader\">\n        <header className=\"justify-content-space\">\n          <div className=\"digi\">\n            <a href=\"#\"><img src=\"img/branding2.png\" alt=\"\" /></a>\n          </div>\n          <div className=\"digilife text-right\">\n            <div>\n              <a href=\"#\"><img src=\"img/main-logo.png\" alt=\"\" /></a></div>\n          </div>\n        </header>\n        <section className=\"welcomeContainer text-center\">\n          <div className=\"titleArea\">\n            <h1>Welcome</h1>\n            <div className=\"text-left\">\n              <span className=\"inlineItem leftSide\">To</span>\n              <div className=\"inlineItem digiLifeTitle\">\n                <span>Digital</span>\n                <span className=\"bigFont\">Life</span>\n                <span>Simplified</span>\n              </div>\n            </div>\n          </div>\n          <p className=\"lead\">WEB EVENT</p>\n          <div className=\"countArea\">\n            <div className=\"counts\">\n              <span>{this.state.days}</span>\n              <span>{this.state.hours}</span>\n              <span>{this.state.minutes}</span>\n            </div>\n            <div className=\"blockItem\">\n              <div className=\"countName\">\n                <span>DAYS</span>\n                <span>HOURS</span>\n                <span>MINUTES</span>\n              </div>\n            </div>\n\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default WaitingPage;\n","import React from 'react';\nimport io from 'socket.io-client';\nimport { endPoint } from '../socket/allSockets';\nimport { getLocalStorage, setLocalStorage } from '../Api/LocalStorage';\nimport { postAPI, getPublicAPI } from '../Api/Api';\nimport WaitingPage from './WaitingPage';\nimport EventPage from './EventPage';\nimport ThankYou from './ThankYou';\n\nlet AllPage = { WaitingPage, EventPage, ThankYou }\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Component: 'WaitingPage',\n      Url: '',\n      Time: '',\n    }\n  }\n\n  componentDidMount() {\n    getPublicAPI('event/event/1')\n      .then(e => {\n        e = e.data;\n        if (e.status == 0 || e.status == 1) {\n          this.setState({\n            Time: e.data.startTime\n          });\n        } else {\n        }\n      });\n    const query = new URLSearchParams(this.props.location.search);\n    let event = query.get('eventId');\n    let user = query.get('userId');\n\n    let User = getLocalStorage('User');\n    if (event && user) {\n      if (User !== '') {\n        this.openSocket();\n      } else {\n        getPublicAPI('user/verifyuser' + this.props.location.search)\n          .then(e => {\n            e = e.data;\n            if (e.status == 1) {\n              setLocalStorage('User', e.data);\n              this.openSocket();\n            } else {\n            }\n          });\n      }\n    } else {\n      // this.openSocket();\n      if (User !== '') {\n        this.openSocket();\n      }\n    }\n  }\n\n  openSocket() {\n    const socket = io(endPoint);\n    socket.on('eventStart', (resp) => {\n      console.log(resp)\n      if (resp.over) {\n        this.setState({\n          Component: 'ThankYou'\n        });\n      } else {\n        if (resp.start === true) {\n          this.setState({\n            Component: 'EventPage',\n            Url: resp.url,\n          });\n        } else {\n          this.setState({\n            Component: 'WaitingPage',\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    let Component = AllPage[this.state.Component];\n    return (\n      <div className=\"App\">\n        <Component Url={this.state.Url} Time={this.state.Time} />\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport io from 'socket.io-client';\nimport { endPoint } from '../socket/allSockets';\nimport { sendMessage } from '../socket/allSockets';\nimport { getLocalStorage } from '../Api/LocalStorage';\nimport { postAPI } from '../Api/Api';\nimport $ from 'jquery';\n\nclass EventPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Url: this.props.Url,\n      // newPoll: false,\n      isPublish: false,\n      Message: '',\n      id: 0,\n      Question: '',\n      Answer: '',\n      a: '',\n      b: '',\n      c: '',\n      d: '',\n    }\n  }\n\n  componentDidMount() {\n    this.hidePopup();\n    const socket = io(endPoint);\n    socket.on('CurrentPoll', (resp) => {\n      console.log(resp)\n      this.setState({\n        id: resp.id,\n        Question: resp.question,\n        a: resp.surveyOption.a,\n        b: resp.surveyOption.b,\n        c: resp.surveyOption.c,\n        d: resp.surveyOption.d,\n        isPublish: resp.isPublished,\n        // newPoll: true\n      });\n\n      if (!resp.isPublished) {\n        this.hidePopup();\n      }\n    });\n  }\n\n  hidePopup() {\n    $(\".poll\").hide();\n    $(\".actionArea\").hide();\n    $(\".questionBox\").hide();\n    $(\".blackOverlay\").hide();\n    this.setState({\n      Answer: '',\n      Message: '',\n    })\n  }\n\n  openPoll() {\n    if (this.state.id < 1 || this.state.isPublish === false) return '';\n    $(\".blackOverlay\").show();\n    $(\".actionArea\").show();\n    $(\".poll\").show();\n    $(\".questionBox\").hide();\n    $(this).toggleClass(\"active\");\n    $(\"#ques\").removeClass(\"active\");\n  }\n\n  openQuestion() {\n    $(\".blackOverlay\").show();\n    $(\".actionArea\").show();\n    $(\".questionBox\").show();\n    $(\".poll\").hide();\n    $(this).toggleClass(\"active\");\n    $(\"#poll\").removeClass(\"active\");\n  }\n\n  sendMessage(e) {\n    e.preventDefault();\n    let User = getLocalStorage('User');\n    let arr = {\n      userId: User.uid,\n      query: this.state.Message\n    }\n    postAPI('survey/query', arr)\n      .then(e => {\n        e = e.data;\n        if (e.status == 1) {\n          this.setState({\n            Message: '',\n          });\n          this.hidePopup();\n        }\n      });\n  }\n\n  savePoll(e) {\n    e.preventDefault();\n    if (!this.state.isPublish) return '';\n\n    let User = getLocalStorage('User');\n    let arr = {\n      qId: this.state.id,\n      userId: User.uid,\n      optId: this.state.Answer\n    }\n    postAPI('survey/poll', arr)\n      .then(e => {\n        e = e.data;\n        if (e.status == 1) {\n          this.setState({\n            isPublish: false\n          });\n          this.hidePopup();\n        }\n      })\n  }\n\n  onRadioChange(e) {\n    this.setState({\n      Answer: e.target.value\n    })\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <section>\n          <div className=\"banner background-Black\">\n            <iframe\n              id=\"ytplayer\"\n              type=\"text/html\"\n              width=\"100%\"\n              // 573px\n              height=\"90%\"\n              src={this.state.Url + '&modestbranding=1&controls=0'}\n              frameborder=\"0\"\n              allow=\"fullscreen\"\n            >\n            </iframe>\n          </div>\n          <div className=\"blackOverlay\">\n            <div className=\"actionArea\">\n              <div style={{ float: \"right\" }} className=\"font25 pointer\" onClick={(e) => this.hidePopup()}>\n                <svg className=\"bi bi-x\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fill-rule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\" clip-rule=\"evenodd\" />\n                  <path fill-rule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\" clip-rule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"poll\">\n                <div className=\"space\">\n                  <h3>{this.state.Question}</h3>\n                  <form>\n                    <div className=\"form-group\">\n                      <div className=\"choice\">\n                        <input type=\"radio\" checked={(this.state.Answer == 'a') ? true: false} onChange={(e) => this.onRadioChange(e)} className=\"form-control\" id=\"yes\" value=\"a\" name=\"radioGroup\" />\n                        <label htmlFor=\"yes\">{this.state.a}</label>\n                      </div>\n                    </div>\n                    <div className=\"form-group\">\n                      <div className=\"choice\">\n                        <input type=\"radio\" checked={(this.state.Answer == 'b') ? true: false} onChange={(e) => this.onRadioChange(e)} className=\"form-control\" id=\"no\" value=\"b\" name=\"radioGroup\" />\n                        <label htmlFor=\"no\">{this.state.b}</label>\n                      </div>\n                    </div>\n                    <div className=\"form-group\">\n                      <div className=\"choice\">\n                        <input type=\"radio\" checked={(this.state.Answer == 'c') ? true: false} onChange={(e) => this.onRadioChange(e)} className=\"form-control\" id=\"notsure\" value=\"c\" name=\"radioGroup\" />\n                        <label htmlFor=\"notsure\">{this.state.c}</label>\n                      </div>\n                    </div>\n                    <div className=\"form-group\">\n                      <div className=\"choice\">\n                        <input type=\"radio\" checked={(this.state.Answer == 'd') ? true: false} onChange={(e) => this.onRadioChange(e)} className=\"form-control\" id=\"yesmaybe\" value=\"d\"\n                          name=\"radioGroup\" />\n                        <label htmlFor=\"yesmaybe\">{this.state.d}</label>\n                      </div>\n                    </div>\n                    <input type=\"button\" onClick={(e) => this.savePoll(e)} className=\"btn\" value=\"submit\" />\n                  </form>\n                </div>\n              </div>\n              <div className=\"questionBox\">\n                <div className=\"space\">\n                  <h2>\n                    Ask your question\n                  </h2>\n                  <form className=\"bottomForm\" onSubmit={(e) => this.sendMessage(e)}>\n                    <textarea name=\"Message\" value={this.state.Message} onChange={(e) => this.onChange(e)} placeholder=\"Please type your relevant question\"></textarea>\n                    <div className=\"marginSide\">\n                      <input type=\"submit\" className=\"btn\" value=\"submit\" />\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <footer>\n          <div className=\"menu\">\n            <a href=\"#\" onClick={(e) => this.openPoll()} className={this.state.isPublish ? 'newPoll' : ''} id=\"poll\">Poll</a>\n            <a href=\"#\" onClick={(e) => this.openQuestion()} id=\"ques\">Ask a Question</a>\n          </div>\n        </footer>\n      </>\n    )\n  }\n}\n\nexport default EventPage;\n","import React from 'react';\n\nclass ThankYou extends React.Component {\n  render() {\n    return (\n      <div className=\"thankYou\">\n        <header>\n          <div className=\"digi text-center\">\n            <a href=\"\" ><img src=\"img/branding2.png\" alt=\"\" /></a>\n          </div>\n          <div className=\"digilife text-right\">\n            <div>\n              <a href=\"\" ><img src=\"img/all.png\" alt=\"\" /></a></div>\n          </div>\n        </header >\n        <section className=\"thankyouContainer text-center\">\n          <div className=\"borderAround\">\n            <h1>Thank you</h1>\n            <p className=\"lead\">For Attending the webinar</p>\n          </div>\n          <div>\n            <p className=\"borderArea\"><span className=\"blockItem\">Please mail your valuable feedback on  the email ID mentioned below</span> <a href=\"mailto:feedback@digi-life.in\">feedback@digi-life.in</a></p>\n          </div>\n        </section>\n      </div >\n    )\n  }\n}\n\nexport default ThankYou;\n","import React from 'react';\nimport { postAPI } from '../Api/Api';\nimport { getKey, setKey } from '../Api/LocalStorage';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      UserName: '',\n      Password: '',\n    }\n  }\n\n  componentDidMount() {\n    let token = getKey('token');\n    if (token && token !== '') {\n      this.props.history.push('/config');\n    }\n  }\n\n  onLogin(e) {\n    e.preventDefault();\n    let arr = {\n      userId: this.state.UserName,\n      pswd: this.state.Password,\n    }\n    postAPI('user/adminauth', arr)\n      .then(e => {\n        e = e.data;\n        if (e.status == 1) {\n          setKey('token', e.token);\n          this.props.history.push('/config');\n        } else {\n          alert(e.message);\n        }\n      });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"></link>\n        <div className=\"container\">\n          <br />\n          <br />\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"card margin-0-auto\" style={{ width: \"500px\" }}>\n                <div className=\"card-body\">\n                  <form onSubmit={(e) => this.onLogin(e)}>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"exampleInputEmail1\">User Name</label>\n                      <input onChange={(e) => this.onChange(e)} name=\"UserName\" type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n                      <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"exampleInputPassword1\">Password</label>\n                      <input onChange={(e) => this.onChange(e)} name=\"Password\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\n                    </div>\n                    <div className=\"form-group form-check\">\n                      <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\n                      <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport io from 'socket.io-client';\nimport { endPoint } from '../socket/allSockets';\nimport { postAPI, putAPI, getAPI, getPublicAPI } from '../Api/Api';\nimport ToggleButton from 'react-toggle-button';\nimport { getLocalStorage, getKey } from '../Api/LocalStorage';\nimport Datetime from 'react-datetime';\nimport '../assets/react-datetime.css';\n\n\nclass Configrator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\n        {\n          id: 1,\n          user: 'Aj',\n          time: '2020-12-12 12:30',\n          message: \"Cras justo odio\"\n        }\n      ],\n      Poll: [],\n      StartDate: '',\n      url: 'sd',\n      Question: '',\n      Ans1: '',\n      Ans2: '',\n      Ans3: '',\n      Ans4: '',\n    }\n  }\n\n  componentDidMount() {\n    let token = getKey('token');\n    if (!token || token === '') {\n      this.props.history.push('/login');\n    }\n\n    const socket = io(endPoint);\n    socket.on('listmessage', (message) => {\n      console.log(message);\n      let AllMessage = this.state.list;\n      AllMessage.unshift(message);\n      console.log(message, AllMessage)\n      this.setState({\n        list: AllMessage\n      });\n    });\n\n    getAPI('survey/question')\n      .then(e => {\n        e = e.data;\n        if (e.status == 1) {\n          this.setState({\n            Poll: e.data\n          });\n        } else {\n          // error\n        }\n      });\n  }\n\n  renderQuestions(list) {\n    if (!list || list.length < 1) return <></>;\n    return list.map((l, k) => {\n      return (\n        <li key={k} onClick={(e) => this.selectQuestion(l)} className=\"pointer list-group-item\"><b>{l.user}</b> ({l.time}) : {l.message}</li>\n      )\n    })\n  }\n\n  selectQuestion(l) {\n    getAPI('survey/userquery/' + l.id)\n      .then(e => {\n        e = e.data;\n        console.log(e);\n      })\n  }\n\n  makeLive(val) {\n    putAPI('survey/publish/' + val.id + '/' + ((val.isPublished) ? 0 : 1), {})\n      .then(e => {\n        e = e.data;\n        if (e.status == 1) {\n          this.changetoggle(val);\n        }\n      });\n  }\n\n  changetoggle(val) {\n    let AllPoll = this.state.Poll;\n    AllPoll.forEach((a, k) => {\n      if (a.id == val.id) {\n        a.isPublished = !val.isPublished;\n      }\n    });\n    this.setState({\n      Poll: AllPoll\n    })\n  }\n\n  removePoll(val) {\n    let arr = {\n      id: val.id,\n    }\n    postAPI('removePoll', arr)\n      .then(e => {\n        console.log(e);\n        //\n      });\n  }\n\n  showResult(l) {\n    // console.log(l);\n    this.props.history.push(\n      '/pollresult',\n      { pollId: l.id }\n    );\n  }\n\n  renderPoll(list) {\n    if (!list || list.length < 1) return <></>;\n    return list.map((l, k) => {\n      return (\n        <li key={k} className=\"list-group-item row\">\n          <div className=\"col-md-6\">\n            {l.question}\n          </div>\n          <div className=\"col-md-3 row\">\n            <div className=\"col-md-4\">\n              Live:\n            </div>\n            <div className=\"col-md-8\">\n              <ToggleButton\n                value={l.isPublished}\n                onToggle={(e) => this.makeLive(l)} />\n            </div>\n          </div>\n          <div className=\"col-md-3 row\">\n            <div className=\"col-md-12 pointer\" onClick={(e) => this.showResult(l)}>\n              Show Results\n            </div>\n          </div>\n          <div className=\"col-md-1 row text-right\">\n            <svg onClick={(e) => this.removePoll(l)} className=\"pointer color-red bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M5.5 5.5A.5.5 0 016 6v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm2.5 0a.5.5 0 01.5.5v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm3 .5a.5.5 0 00-1 0v6a.5.5 0 001 0V6z\" />\n              <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 01-1 1H13v9a2 2 0 01-2 2H5a2 2 0 01-2-2V4h-.5a1 1 0 01-1-1V2a1 1 0 011-1H6a1 1 0 011-1h2a1 1 0 011 1h3.5a1 1 0 011 1v1zM4.118 4L4 4.059V13a1 1 0 001 1h6a1 1 0 001-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n        </li>\n      )\n    })\n  }\n\n  saveQuestion(e) {\n    e.preventDefault();\n    let arr = {\n      \"question\": this.state.Question,\n      \"option\": {\n        \"a\": this.state.Ans1,\n        \"b\": this.state.Ans2,\n        \"c\": this.state.Ans3,\n        \"d\": this.state.Ans4,\n      }\n    }\n    postAPI('survey/question', arr)\n      .then(e => {\n        e = e.data;\n        if (e.status == 1) {\n          let AllPoll = this.state.Poll;\n          AllPoll.push(e.data);\n          this.setState({\n            Poll: AllPoll\n          });\n          this.resetQuestion();\n        } else {\n          //\n        }\n      });\n  }\n\n  resetQuestion() {\n    this.setState({\n      Question: '',\n      Ans1: '',\n      Ans2: '',\n      Ans3: '',\n      Ans4: ''\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      StartDate: e._d\n    })\n  }\n\n  onStartDateSave() {\n    let arr = {\n      StartDate: this.state.StartDate\n    }\n    postAPI('event/event/1', arr)\n      .then(e => {\n        e = e.data;\n        if (e.status == 1) {\n          console.log(e);\n        } else { }\n      });\n  }\n\n  onStartEvent() {\n    if (!window.confirm('Do you want to start the session early?')) return '';\n    if (!window.confirm('Are you sure?')) return '';\n\n    putAPI('event/startevent/1/1', {})\n      .then(e => {\n        e = e.data;\n        if (e.status == 1) {\n          console.log(e);\n        } else { }\n      });\n  }\n\n  onEndEvent() {\n    if (!window.confirm('Do you want to end the session?')) return '';\n    if (!window.confirm('Are you sure?')) return '';\n\n    putAPI('event/startevent/1/0', {})\n      .then(e => {\n        e = e.data;\n        if (e.status == 1) {\n          console.log(e);\n        } else { }\n      });\n  }\n\n\n  render() {\n    return (\n      <div className=\"wrapper container\">\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"></link>\n        <h2>Event Details</h2>\n        <div className=\"row\">\n          <div className=\"col-md-5\">\n            <div className=\"row\">\n              <h3>Event Start/End</h3>\n              <div className=\"form-group\">\n                <button type=\"button\" onClick={(e) => this.onStartEvent()} className=\"col-md-4 btn btn-success\">Start Event</button>\n                <div className=\"col-md-4\">&nbsp;</div>\n                <button type=\"button\" onClick={(e) => this.onEndEvent()} className=\"col-md-4 btn btn-danger\">End Event</button>\n              </div>\n            </div>\n            <div className=\"row\">\n              <h3>Poll</h3>\n              <div className=\"form-group\">\n                <div className=\"col-md-4\">Live Poll Url</div>\n                <div className=\"col-md-8\">{this.state.url}</div>\n              </div>\n              <br />\n              <div className=\"form-group\">\n                <ul className=\"list-group list-group-flush\">\n                  {this.renderPoll(this.state.Poll)}\n                </ul>\n              </div>\n              <div className=\"form-group card\">\n                <h3>Add Poll</h3>\n                <div className=\"card-body\">\n                  <form onSubmit={(e) => this.saveQuestion(e)} className=\"margin-0-auto\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"question\">Question :</label>\n                      <input onChange={(e) => this.onChange(e)} value={this.state.Question} name=\"Question\" type=\"text\" className=\"form-control\" id=\"question\" aria-describedby=\"emailHelp\" />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"ans1\">Answer 1</label>\n                      <input onChange={(e) => this.onChange(e)} value={this.state.Ans1} name=\"Ans1\" type=\"text\" className=\"form-control\" id=\"ans1\" aria-describedby=\"emailHelp\" />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"ans2\">Answer 2</label>\n                      <input onChange={(e) => this.onChange(e)} value={this.state.Ans2} name=\"Ans2\" type=\"text\" className=\"form-control\" id=\"ans2\" />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"ans3\">Answer 3</label>\n                      <input onChange={(e) => this.onChange(e)} value={this.state.Ans3} name=\"Ans3\" type=\"text\" className=\"form-control\" id=\"ans3\" />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"ans4\">Answer 4</label>\n                      <input onChange={(e) => this.onChange(e)} value={this.state.Ans4} name=\"Ans4\" type=\"text\" className=\"form-control\" id=\"ans4\" />\n                    </div>\n                    <div className=\"form-group\">\n                      <button type=\"submit\" className=\"btn btn-primary col-md-4\">Add Poll</button>\n                      <div className=\"col-md-4\">&nbsp;</div>\n                      <button type=\"button\" onClick={(e) => this.resetQuestion()} className=\"btn btn-primary col-md-4\">Cancel</button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            <br />\n          </div>\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-6\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <a href=\"/selectedMessage\" target=\"_blank\" >Selected Messages</a>\n              </div>\n            </div>\n            <h3>Questions</h3>\n            <div className=\"form-group height300px\">\n              <ul className=\"list-group list-group-flush\">\n                {this.renderQuestions(this.state.list)}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Configrator;\n","import React from 'react';\nimport Chart from 'chart.js';\nimport { endPoint } from '../socket/allSockets';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport io from 'socket.io-client';\n\nclass PollResult extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      Questions: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n      a: 'yes',\n      b: 'no',\n      c: 'yyes',\n      d: 'nno',\n      data: [12, 100, 3, 5]\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.location && this.props.location.state && this.props.location.state.pollId) {\n      this.setState({\n        id: this.props.location.state.pollId\n      })\n      this.openSocket();\n    }\n  }\n\n  openSocket() {\n    const socket = io(endPoint);\n    socket.on('pollResult', (resp) => {\n      console.log(resp, this.state.id);\n      let r = {};\n      resp.forEach((l, k) => {\n        if (l.questionId == this.state.id) {\n          r = l\n        }\n      });\n\n      if (Object.keys(r).length < 1) return '';\n\n      this.setState({\n        a: r.A.name,\n        b: r.B.name,\n        c: r.C.name,\n        d: r.D.name,\n        data: [\n          r.A.value,\n          r.B.value,\n          r.C.value,\n          r.D.value,\n        ],\n        Questions: r.question,\n      }, () => {\n        this.renderCanvas();\n      });\n    });\n  }\n\n  renderCanvas() {\n    var ctx = document.getElementById('myChart').getContext('2d');\n    Chart.plugins.unregister(ChartDataLabels);\n    new Chart(ctx, {\n      type: 'bar',\n      plugins: [ChartDataLabels],\n      data: {\n        labels: ['A', 'B', 'C', 'D'],\n        datasets: [{\n          label: '# of Votes',\n          data: this.state.data,\n          backgroundColor: [\n            '#b7181e',\n            '#40a89e',\n            '#6a76be',\n            '#f65f1e',\n          ],\n          borderColor: [\n            '#b7181e',\n            '#40a89e',\n            '#6a76be',\n            '#f65f1e',\n          ],\n          borderWidth: 1,\n        }]\n      },\n      options: {\n        plugins: {\n          datalabels: {\n            color: 'white',\n            labels: {\n              title: {\n                font: {\n                  weight: 'bold'\n                }\n              },\n              value: {\n                color: 'green'\n              }\n            }\n          }\n        },\n        scales: {\n          yAxes: [{\n            gridLines: {\n              color: \"rgba(0, 0, 0, 0)\",\n            }\n          }],\n          xAxes: [{\n            gridLines: {\n              color: \"rgba(0, 0, 0, 0)\",\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"></link>\n        <div className=\"container\">\n          <br /><br />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"card\">\n                <div className=\"card-body poolResult\">\n                  <h2 className=\"card-title\">Q: {this.state.Questions}</h2>\n                </div>\n                <div>\n                  <ul className=\"list-group list-group-flush\">\n                    <li className=\"listRender\"><span style={{ background: '#b7181e' }} className=\"colWidth\"></span> <b>{this.state.a}</b></li>\n                    <li className=\"listRender\"><span style={{ background: '#40a89e' }} className=\"colWidth\"></span> <b>{this.state.b}</b></li>\n                    <li className=\"listRender\"><span style={{ background: '#6a76be' }} className=\"colWidth\"></span> <b>{this.state.c}</b></li>\n                    <li className=\"listRender\"><span style={{ background: '#f65f1e' }} className=\"colWidth\"></span> <b>{this.state.d}</b></li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <canvas id=\"myChart\" width=\"80px\" height=\"80px\"></canvas>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default PollResult;\n","import React from 'react';\nimport io from 'socket.io-client';\nimport { endPoint } from '../socket/allSockets';\n\nclass renderMessageImp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n    }\n  }\n\n  componentDidMount() {\n    this.openSocket();\n  }\n\n  openSocket() {\n    const socket = io(endPoint);\n    socket.on('userQuery', (message) => {\n      console.log(message);\n      let AllMessage = this.state.list;\n      AllMessage.unshift(message);\n      this.setState({\n        list: AllMessage\n      });\n    });\n  }\n\n  renderQuestions(list) {\n    if (!list || list.length < 1) return <></>;\n    return list.map((l, k) => {\n      return (\n        <li key={k} className=\"list-group-item\"><b>{l.user.f_name}</b> ({l.time}) : {l.message}</li>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h3>Questions</h3>\n        <div className=\"form-group height300px\">\n          <ul className=\"list-group list-group-flush\">\n            {this.renderQuestions(this.state.list)}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default renderMessageImp;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Home from './Home';\nimport Login from './Login';\nimport Configrator from './Configrator';\nimport PollResult from './PollResult';\nimport renderMessageImp from './renderMessageImp'\n\nfunction Navigation() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/config\" exact component={Configrator} />\n        <Route path=\"/pollresult\" exact component={PollResult} />\n        <Route path=\"/selectedMessage\" exact component={renderMessageImp} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport Navigation from './Component/Navigation';\n\nfunction App() {\n  return (\n    <Navigation />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}